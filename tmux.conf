# Tmux settings
#
###########################################################################
# Change prefix from default (C-b) to ` (backtick)
unbind C-b
set -g prefix `
bind-key ` send-prefix

# Set XTerm key bindings
setw -g xterm-keys on

# Set colors
set-option -g default-terminal "screen-256color"

# Set reload key to r
bind r source-file ~/.tmux.conf

# Count sessions start at 1
set -g base-index 1

# Use vim bindings
setw -g mode-keys vi


##########################################################################
# Window management / navigation

# move between windows
bind-key C-h previous-window
bind-key C-l next-window

# C-\ (no prefix) to skip to last window we were in before this one
bind -n "C-\\" last-window

# C-Space (no prefix) to tab to next window
bind -n C-Space next-window

###########################################################################

########################################################################
# Pane management / navigation
# navigation with C-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# bind -n C-k run-shell 'tmux-vim-select-pane -U'
# bind -n C-j run-shell 'tmux-vim-select-pane -D'
# bind -n C-h run-shell 'tmux-vim-select-pane -L'
# bind -n C-l run-shell 'tmux-vim-select-pane -R'

# C-g C-k to passthrough a C-k
# C-k is consumed for pane navigation but we want it for kill-to-eol
unbind C-k
bind C-k send-key C-k
##########################################################################


# Remap window navigation to vim
# unbind-key j
# bind-key j select-pane -D 
# unbind-key k
# bind-key k select-pane -U
# unbind-key h
# bind-key h select-pane -L
# unbind-key l
# bind-key l select-pane -R

# Set the title bar
set -g set-titles on
set -g set-titles-string '#(whoami) :: #h :: #(curl ipecho.net/plain;echo)'

# Set status bar
set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 5 
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s)#[fg=white]::#[fg=yellow]#(curl ipecho.net/plain;echo)"
set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'

# Highlight curronw window
set-window-option -g window-status-current-bg green

# active window title colors
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg blue

# pane border
set-option -g pane-border-fg cyan
set-option -g pane-active-border-fg red
 
# Since oh-my-zsh renames windows for last commaands which are then picked up by tmux
# For referene http://superuser.com/questions/306028/tmux-and-zsh-custom-prompt-bug-with-window-name
set-option -g allow-rename off

# Move windows using (Ctrl-Shift-Left/Right)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# better pane splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
